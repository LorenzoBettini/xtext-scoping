/*
* generated by Xtext
*/
package org.xtext.example.helloscoping.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.helloscoping.services.HelloScopingGrammarAccess;

public class HelloScopingParser extends AbstractContentAssistParser {
	
	@Inject
	private HelloScopingGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.helloscoping.ui.contentassist.antlr.internal.InternalHelloScopingParser createParser() {
		org.xtext.example.helloscoping.ui.contentassist.antlr.internal.InternalHelloScopingParser result = new org.xtext.example.helloscoping.ui.contentassist.antlr.internal.InternalHelloScopingParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getGreetingAccess().getGroup(), "rule__Greeting__Group__0");
					put(grammarAccess.getGreetingAccess().getGroup_2(), "rule__Greeting__Group_2__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getFieldReferenceAccess().getGroup(), "rule__FieldReference__Group__0");
					put(grammarAccess.getModelAccess().getGreetingsAssignment(), "rule__Model__GreetingsAssignment");
					put(grammarAccess.getGreetingAccess().getNameAssignment_1(), "rule__Greeting__NameAssignment_1");
					put(grammarAccess.getGreetingAccess().getSuperTypeAssignment_2_1(), "rule__Greeting__SuperTypeAssignment_2_1");
					put(grammarAccess.getGreetingAccess().getFieldsAssignment_4(), "rule__Greeting__FieldsAssignment_4");
					put(grammarAccess.getGreetingAccess().getReferencesAssignment_5(), "rule__Greeting__ReferencesAssignment_5");
					put(grammarAccess.getFieldAccess().getNameAssignment_1(), "rule__Field__NameAssignment_1");
					put(grammarAccess.getFieldReferenceAccess().getReferenceAssignment_1(), "rule__FieldReference__ReferenceAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.helloscoping.ui.contentassist.antlr.internal.InternalHelloScopingParser typedParser = (org.xtext.example.helloscoping.ui.contentassist.antlr.internal.InternalHelloScopingParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public HelloScopingGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(HelloScopingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
